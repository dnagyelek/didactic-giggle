version: "2"
services:

  redis: # ok
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    restart: always

  mailhog: # ok
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - "8025:8025"
    restart: always

  mysql: # ok
    image: wodby/mariadb
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: wordpress
      MYSQL_USER: username
      MYSQL_PASSWORD: password
    volumes:
      - "./data/db:/var/lib/mysql"
#      - ./mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
#      - /path/to/mariadb/data/on/host:/var/lib/mysql # I want to manage volumes manually.
    ports:
      - "3306:3306"

  phpmyadmin: # ok
      image: phpmyadmin/phpmyadmin
      container_name: phpmyadmin
      depends_on:
        - mysql
      environment:
        PMA_USER: root
        PMA_PASSWORD: password
        PMA_ARBITRARY: 1
        PMA_HOST: mysql
      ports:
        - "8080:80"
      restart: always

  nginx:
    image: nginx:alpine # works
    container_name: nginx
    depends_on:
      - phpfpm
      - mysql
    environment:
      NGINX_STATIC_CONTENT_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: phpfpm
      NGINX_SERVER_ROOT: /var/www/html
    volumes:
      - "./wordpress:/var/www/html"
      - "./config/nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./config/nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "./config/certs:/etc/nginx/certs"
      - "./logs/nginx:/var/log/nginx"
    ports:
      - "80:80"
      - "443:443"
    restart: always

  phpfpm: # to build !!!
    # image: wodby/base-php:7.0.23 !works
    image: wodby/php # works
    container_name: phpfpm
    environment:
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025 # works on wodby
    volumes:
      - "./wordpress:/var/www/html"
    restart: always

#  browser-sync:
#    image: ustwo/browser-sync
#    container_name: browser-sync
#    links:
#      - nginx
#    command: start --https --no-open --proxy "https://docker.dev:443" --files '**/*.css' --files '**/*.html'
#    command: reload --url "https://docker.dev:443" --files '**/*.css' --files '**/*.html'
#    volumes:
#      - "./wordpress:/source"
#    ports:
#      - "3000:3000"
#      - "3001:3001"
#    restart: always